{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "data.jobs.iot.amazonaws.com",
  "basePath": "/",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>AWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.</p> <p> To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.</p> <p> AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS IoT Jobs Data Plane",
    "version": "2017-09-29",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-jobs-data-2017-09-29.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "iot-jobs-data"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/iot/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/things/{thingName}/jobs": {
      "get": {
        "description": "Gets the list of all jobs for a thing that are not in a terminal status.",
        "operationId": "GetPendingJobExecutions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPendingJobExecutionsRequest"
            }
          },
          {
            "in": "path",
            "name": "thingName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPendingJobExecutionsResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "484": {
            "description": "CertificateValidationException",
            "schema": {
              "$ref": "#/definitions/CertificateValidationException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/things/{thingName}/jobs/$next": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "description": "Gets and starts the next pending (status IN_PROGRESS or QUEUED) job execution for a thing.",
        "operationId": "StartNextPendingJobExecution",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartNextPendingJobExecutionRequest"
            }
          },
          {
            "in": "path",
            "name": "thingName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartNextPendingJobExecutionResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "484": {
            "description": "CertificateValidationException",
            "schema": {
              "$ref": "#/definitions/CertificateValidationException"
            }
          }
        }
      }
    },
    "/things/{thingName}/jobs/{jobId}": {
      "get": {
        "description": "Gets details of a job execution.",
        "operationId": "DescribeJobExecution",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeJobExecutionRequest"
            }
          },
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "thingName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeJobExecutionResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "484": {
            "description": "CertificateValidationException",
            "schema": {
              "$ref": "#/definitions/CertificateValidationException"
            }
          },
          "485": {
            "description": "TerminalStateException",
            "schema": {
              "$ref": "#/definitions/TerminalStateException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Updates the status of a job execution.",
        "operationId": "UpdateJobExecution",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateJobExecutionRequest"
            }
          },
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "thingName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateJobExecutionResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "484": {
            "description": "CertificateValidationException",
            "schema": {
              "$ref": "#/definitions/CertificateValidationException"
            }
          },
          "485": {
            "description": "InvalidStateTransitionException",
            "schema": {
              "$ref": "#/definitions/InvalidStateTransitionException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CertificateValidationException": {
      "description": "The certificate is invalid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "Additional information about the exception."
        }
      },
      "type": "object"
    },
    "DescribeJobExecutionJobId": {
      "pattern": "[a-zA-Z0-9_-]+|^\\$next",
      "type": "string"
    },
    "DescribeJobExecutionRequest": {
      "properties": {},
      "type": "object"
    },
    "DescribeJobExecutionResponse": {
      "properties": {
        "execution": {
          "$ref": "#/definitions/JobExecution",
          "description": "Contains data about a job execution."
        }
      },
      "type": "object"
    },
    "DetailsKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "DetailsMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/DetailsKey"
          },
          "value": {
            "$ref": "#/definitions/DetailsValue"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "DetailsValue": {
      "maxLength": 1024,
      "minLength": 1,
      "pattern": "[^\\p\\{C\\}]*\\+",
      "type": "string"
    },
    "ExecutionNumber": {
      "type": "integer"
    },
    "ExpectedVersion": {
      "type": "integer"
    },
    "GetPendingJobExecutionsRequest": {
      "properties": {},
      "type": "object"
    },
    "GetPendingJobExecutionsResponse": {
      "properties": {
        "inProgressJobs": {
          "$ref": "#/definitions/JobExecutionSummaryList",
          "description": "A list of JobExecutionSummary objects with status IN_PROGRESS."
        },
        "queuedJobs": {
          "$ref": "#/definitions/JobExecutionSummaryList",
          "description": "A list of JobExecutionSummary objects with status QUEUED."
        }
      },
      "type": "object"
    },
    "IncludeExecutionState": {
      "type": "boolean"
    },
    "IncludeJobDocument": {
      "type": "boolean"
    },
    "InvalidRequestException": {
      "description": "The contents of the request were invalid. For example, this code is returned when an UpdateJobExecution request contains invalid status details. The message contains details about the error.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "type": "object"
    },
    "InvalidStateTransitionException": {
      "description": "An update attempted to change the job execution to a state that is invalid because of the job execution's current state (for example, an attempt to change a request in state SUCCESS to state IN_PROGRESS). In this case, the body of the error message also contains the executionState field.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "JobDocument": {
      "maxLength": 32768,
      "type": "string"
    },
    "JobExecution": {
      "description": "Contains data about a job execution.",
      "properties": {
        "executionNumber": {
          "$ref": "#/definitions/ExecutionNumber",
          "description": "A number that identifies a particular job execution on a particular device. It can be used later in commands that return or update job execution information."
        },
        "jobDocument": {
          "$ref": "#/definitions/JobDocument",
          "description": "The content of the job document."
        },
        "jobId": {
          "$ref": "#/definitions/JobId",
          "description": "The unique identifier you assigned to this job when it was created."
        },
        "lastUpdatedAt": {
          "$ref": "#/definitions/LastUpdatedAt",
          "description": "The time, in milliseconds since the epoch, when the job execution was last updated. "
        },
        "queuedAt": {
          "$ref": "#/definitions/QueuedAt",
          "description": "The time, in milliseconds since the epoch, when the job execution was enqueued."
        },
        "startedAt": {
          "$ref": "#/definitions/StartedAt",
          "description": "The time, in milliseconds since the epoch, when the job execution was started."
        },
        "status": {
          "$ref": "#/definitions/JobExecutionStatus",
          "description": "The status of the job execution. Can be one of: \"QUEUED\", \"IN_PROGRESS\", \"FAILED\", \"SUCCESS\", \"CANCELED\", \"REJECTED\", or \"REMOVED\"."
        },
        "statusDetails": {
          "$ref": "#/definitions/DetailsMap",
          "description": "A collection of name/value pairs that describe the status of the job execution."
        },
        "thingName": {
          "$ref": "#/definitions/ThingName",
          "description": "The name of the thing that is executing the job."
        },
        "versionNumber": {
          "$ref": "#/definitions/VersionNumber",
          "description": "The version of the job execution. Job execution versions are incremented each time they are updated by a device."
        }
      },
      "type": "object"
    },
    "JobExecutionState": {
      "description": "Contains data about the state of a job execution.",
      "properties": {
        "status": {
          "$ref": "#/definitions/JobExecutionStatus",
          "description": "The status of the job execution. Can be one of: \"QUEUED\", \"IN_PROGRESS\", \"FAILED\", \"SUCCESS\", \"CANCELED\", \"REJECTED\", or \"REMOVED\"."
        },
        "statusDetails": {
          "$ref": "#/definitions/DetailsMap",
          "description": "A collection of name/value pairs that describe the status of the job execution."
        },
        "versionNumber": {
          "$ref": "#/definitions/VersionNumber",
          "description": "The version of the job execution. Job execution versions are incremented each time they are updated by a device."
        }
      },
      "type": "object"
    },
    "JobExecutionStatus": {
      "enum": [
        "QUEUED",
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED",
        "REJECTED",
        "REMOVED",
        "CANCELED"
      ],
      "type": "string"
    },
    "JobExecutionSummary": {
      "description": "Contains a subset of information about a job execution.",
      "properties": {
        "executionNumber": {
          "$ref": "#/definitions/ExecutionNumber",
          "description": "A number that identifies a particular job execution on a particular device."
        },
        "jobId": {
          "$ref": "#/definitions/JobId",
          "description": "The unique identifier you assigned to this job when it was created."
        },
        "lastUpdatedAt": {
          "$ref": "#/definitions/LastUpdatedAt",
          "description": "The time, in milliseconds since the epoch, when the job execution was last updated."
        },
        "queuedAt": {
          "$ref": "#/definitions/QueuedAt",
          "description": "The time, in milliseconds since the epoch, when the job execution was enqueued."
        },
        "startedAt": {
          "$ref": "#/definitions/StartedAt",
          "description": "The time, in milliseconds since the epoch, when the job execution started."
        },
        "versionNumber": {
          "$ref": "#/definitions/VersionNumber",
          "description": "The version of the job execution. Job execution versions are incremented each time AWS IoT Jobs receives an update from a device."
        }
      },
      "type": "object"
    },
    "JobExecutionSummaryList": {
      "items": {
        "$ref": "#/definitions/JobExecutionSummary"
      },
      "type": "array"
    },
    "JobId": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "LastUpdatedAt": {
      "type": "integer"
    },
    "QueuedAt": {
      "type": "integer"
    },
    "ResourceNotFoundException": {
      "description": "The specified resource does not exist.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "type": "object"
    },
    "ServiceUnavailableException": {
      "description": "The service is temporarily unavailable.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "type": "object"
    },
    "StartNextPendingJobExecutionRequest": {
      "properties": {
        "statusDetails": {
          "$ref": "#/definitions/DetailsMap",
          "description": "A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged."
        }
      },
      "type": "object"
    },
    "StartNextPendingJobExecutionResponse": {
      "properties": {
        "execution": {
          "$ref": "#/definitions/JobExecution",
          "description": "A JobExecution object."
        }
      },
      "type": "object"
    },
    "StartedAt": {
      "type": "integer"
    },
    "TerminalStateException": {
      "description": "The job is in a terminal state.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage"
        }
      },
      "type": "object"
    },
    "ThingName": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "ThrottlingException": {
      "description": "The rate exceeds the limit.",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "type": "object"
    },
    "UpdateJobExecutionRequest": {
      "properties": {
        "executionNumber": {
          "$ref": "#/definitions/ExecutionNumber",
          "description": "Optional. A number that identifies a particular job execution on a particular device."
        },
        "expectedVersion": {
          "$ref": "#/definitions/ExpectedVersion",
          "description": "Optional. The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)"
        },
        "includeJobDocument": {
          "$ref": "#/definitions/IncludeJobDocument",
          "description": "Optional. When set to true, the response contains the job document. The default is false."
        },
        "includeJobExecutionState": {
          "$ref": "#/definitions/IncludeExecutionState",
          "description": "Optional. When included and set to true, the response contains the JobExecutionState data. The default is false."
        },
        "status": {
          "$ref": "#/definitions/JobExecutionStatus",
          "description": "The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be specified on every update."
        },
        "statusDetails": {
          "$ref": "#/definitions/DetailsMap",
          "description": " Optional. A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged."
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "UpdateJobExecutionResponse": {
      "properties": {
        "executionState": {
          "$ref": "#/definitions/JobExecutionState",
          "description": "A JobExecutionState object."
        },
        "jobDocument": {
          "$ref": "#/definitions/JobDocument",
          "description": "The contents of the Job Documents."
        }
      },
      "type": "object"
    },
    "VersionNumber": {
      "type": "integer"
    },
    "errorMessage": {
      "type": "string"
    }
  }
}
