{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "runtime.sagemaker.amazonaws.com",
  "basePath": "/",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": " Amazon SageMaker runtime API. ",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon SageMaker Runtime",
    "version": "2017-05-13",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/runtime.sagemaker-2017-05-13.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "runtime.sagemaker"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/sagemaker/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/endpoints/{EndpointName}/invocations": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>After you deploy a model into production using Amazon SageMaker hosting services, your client applications use this API to get inferences from the model hosted at the specified endpoint. </p> <p>For an overview of Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a> </p> <p> Amazon SageMaker strips all POST headers except those supported by the API. Amazon SageMaker might add additional headers. You should not rely on the behavior of headers outside those enumerated in the request syntax. </p>",
        "operationId": "InvokeEndpoint",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvokeEndpointInput"
            }
          },
          {
            "in": "path",
            "name": "EndpointName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvokeEndpointOutput"
            }
          },
          "480": {
            "description": "InternalFailure",
            "schema": {
              "$ref": "#/definitions/InternalFailure"
            }
          },
          "481": {
            "description": "ServiceUnavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          },
          "482": {
            "description": "ValidationError",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "483": {
            "description": "ModelError",
            "schema": {
              "$ref": "#/definitions/ModelError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BodyBlob": {
      "format": "password",
      "maxLength": 5242880,
      "type": "string"
    },
    "EndpointName": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string"
    },
    "Header": {
      "maxLength": 1024,
      "type": "string"
    },
    "InternalFailure": {
      "description": " Internal failure occurred. ",
      "properties": {
        "Message": {
          "$ref": "#/definitions/Message"
        }
      },
      "type": "object"
    },
    "InvokeEndpointInput": {
      "properties": {
        "Body": {
          "$ref": "#/definitions/BodyBlob",
          "description": "Provides input data, in the format specified in the <code>ContentType</code> request header. Amazon SageMaker passes all of the data in the body to the model. "
        }
      },
      "required": [
        "Body"
      ],
      "type": "object"
    },
    "InvokeEndpointOutput": {
      "properties": {
        "Body": {
          "$ref": "#/definitions/BodyBlob",
          "description": "Includes the inference provided by the model."
        }
      },
      "required": [
        "Body"
      ],
      "type": "object"
    },
    "LogStreamArn": {
      "type": "string"
    },
    "Message": {
      "maxLength": 2048,
      "type": "string"
    },
    "ModelError": {
      "description": " Model (owned by the customer in the container) returned an error 500. ",
      "properties": {
        "LogStreamArn": {
          "$ref": "#/definitions/LogStreamArn",
          "description": " Amazon Resource Name (ARN) of the log stream. "
        },
        "Message": {
          "$ref": "#/definitions/Message"
        },
        "OriginalMessage": {
          "$ref": "#/definitions/Message",
          "description": " Original message. "
        },
        "OriginalStatusCode": {
          "$ref": "#/definitions/StatusCode",
          "description": " Original status code. "
        }
      },
      "type": "object"
    },
    "ServiceUnavailable": {
      "description": " Service is unavailable. Try your call again. ",
      "properties": {
        "Message": {
          "$ref": "#/definitions/Message"
        }
      },
      "type": "object"
    },
    "StatusCode": {
      "type": "integer"
    },
    "ValidationError": {
      "description": " Inspect your request and try again. ",
      "properties": {
        "Message": {
          "$ref": "#/definitions/Message"
        }
      },
      "type": "object"
    }
  }
}
