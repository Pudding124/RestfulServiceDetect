{
  "swagger": "2.0",
  "schemes": [
    "https",
    "http"
  ],
  "host": "workspaces.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows desktops for your users.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon WorkSpaces",
    "version": "2015-04-08",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workspaces-2015-04-08.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "workspaces"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/workspaces/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates the specified IP access control group with the specified directory.",
        "operationId": "AssociateIpGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateIpGroupsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "OperationNotSupportedException",
            "schema": {
              "$ref": "#/definitions/OperationNotSupportedException"
            }
          }
        }
      }
    },
    "/#AuthorizeIpRules": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Adds one or more rules to the specified IP access control group.</p> <p>This action gives users permission to access their WorkSpaces from the CIDR address ranges specified in the rules.</p>",
        "operationId": "AuthorizeIpRules",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizeIpRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthorizeIpRulesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    },
    "/#CreateIpGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates an IP access control group.</p> <p>An IP access control group provides you with the ability to control the IP addresses from which users are allowed to access their WorkSpaces. To specify the CIDR address ranges, add rules to your IP access control group and then associate the group with your directory. You can add rules when you create the group or at any time using <a>AuthorizeIpRules</a>.</p> <p>There is a default IP access control group associated with your directory. If you don't associate an IP access control group with your directory, the default group is used. The default group includes a default rule that allows users to access their WorkSpaces from anywhere. You cannot modify the default IP access control group for your directory.</p>",
        "operationId": "CreateIpGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateIpGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateIpGroupResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "483": {
            "description": "ResourceCreationFailedException",
            "schema": {
              "$ref": "#/definitions/ResourceCreationFailedException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    },
    "/#CreateTags": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates the specified tags for the specified WorkSpace.",
        "operationId": "CreateTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTagsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          }
        }
      }
    },
    "/#CreateWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates one or more WorkSpaces.</p> <p>This operation is asynchronous and returns before the WorkSpaces are created.</p>",
        "operationId": "CreateWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateWorkspacesResult"
            }
          },
          "480": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        }
      }
    },
    "/#DeleteIpGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes the specified IP access control group.</p> <p>You cannot delete an IP access control group that is associated with a directory.</p>",
        "operationId": "DeleteIpGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIpGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteIpGroupResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceAssociatedException",
            "schema": {
              "$ref": "#/definitions/ResourceAssociatedException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    },
    "/#DeleteTags": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes the specified tags from the specified WorkSpace.",
        "operationId": "DeleteTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteTagsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        }
      }
    },
    "/#DescribeIpGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes one or more of your IP access control groups.",
        "operationId": "DescribeIpGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeIpGroupsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    },
    "/#DescribeTags": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the specified tags for the specified WorkSpace.",
        "operationId": "DescribeTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTagsResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeWorkspaceBundles": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Describes the available WorkSpace bundles.</p> <p>You can filter the results using either bundle ID or owner, but not both.</p>",
        "operationId": "DescribeWorkspaceBundles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceBundlesRequest"
            }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceBundlesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        }
      }
    },
    "/#DescribeWorkspaceDirectories": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the available AWS Directory Service directories that are registered with Amazon WorkSpaces.",
        "operationId": "DescribeWorkspaceDirectories",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceDirectoriesRequest"
            }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspaceDirectoriesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        }
      }
    },
    "/#DescribeWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Describes the specified WorkSpaces.</p> <p>You can filter the results using bundle ID, directory ID, or owner, but you can specify only one filter at a time.</p>",
        "operationId": "DescribeWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesRequest"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "Limit",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/#DescribeWorkspacesConnectionStatus": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the connection status of the specified WorkSpaces.",
        "operationId": "DescribeWorkspacesConnectionStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesConnectionStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeWorkspacesConnectionStatusResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          }
        }
      }
    },
    "/#DisassociateIpGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates the specified IP access control group from the specified directory.",
        "operationId": "DisassociateIpGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateIpGroupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateIpGroupsResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    },
    "/#ModifyWorkspaceProperties": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies the specified WorkSpace properties.",
        "operationId": "ModifyWorkspaceProperties",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyWorkspacePropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyWorkspacePropertiesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "482": {
            "description": "OperationInProgressException",
            "schema": {
              "$ref": "#/definitions/OperationInProgressException"
            }
          },
          "483": {
            "description": "UnsupportedWorkspaceConfigurationException",
            "schema": {
              "$ref": "#/definitions/UnsupportedWorkspaceConfigurationException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ResourceUnavailableException"
            }
          }
        }
      }
    },
    "/#ModifyWorkspaceState": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Sets the state of the specified WorkSpace.</p> <p>To maintain a WorkSpace without being interrupted, set the WorkSpace state to <code>ADMIN_MAINTENANCE</code>. WorkSpaces in this state do not respond to requests to reboot, stop, start, or rebuild. An AutoStop WorkSpace in this state is not stopped. Users can log into a WorkSpace in the <code>ADMIN_MAINTENANCE</code> state.</p>",
        "operationId": "ModifyWorkspaceState",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyWorkspaceStateResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        }
      }
    },
    "/#RebootWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Reboots the specified WorkSpaces.</p> <p>You cannot reboot a WorkSpace unless its state is <code>AVAILABLE</code> or <code>UNHEALTHY</code>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have rebooted.</p>",
        "operationId": "RebootWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebootWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebootWorkspacesResult"
            }
          }
        }
      }
    },
    "/#RebuildWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Rebuilds the specified WorkSpace.</p> <p>You cannot rebuild a WorkSpace unless its state is <code>AVAILABLE</code>, <code>ERROR</code>, or <code>UNHEALTHY</code>.</p> <p>Rebuilding a WorkSpace is a potentially destructive action that can result in the loss of data. For more information, see <a href=\"http://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html\">Rebuild a WorkSpace</a>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely rebuilt.</p>",
        "operationId": "RebuildWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebuildWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebuildWorkspacesResult"
            }
          }
        }
      }
    },
    "/#RevokeIpRules": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Removes one or more rules from the specified IP access control group.",
        "operationId": "RevokeIpRules",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RevokeIpRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeIpRulesResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    },
    "/#StartWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Starts the specified WorkSpaces.</p> <p>You cannot start a WorkSpace unless it has a running mode of <code>AutoStop</code> and a state of <code>STOPPED</code>.</p>",
        "operationId": "StartWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartWorkspacesResult"
            }
          }
        }
      }
    },
    "/#StopWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p> Stops the specified WorkSpaces.</p> <p>You cannot stop a WorkSpace unless it has a running mode of <code>AutoStop</code> and a state of <code>AVAILABLE</code>, <code>IMPAIRED</code>, <code>UNHEALTHY</code>, or <code>ERROR</code>.</p>",
        "operationId": "StopWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopWorkspacesResult"
            }
          }
        }
      }
    },
    "/#TerminateWorkspaces": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Terminates the specified WorkSpaces.</p> <p>Terminating a WorkSpace is a permanent action and cannot be undone. The user's data is destroyed. If you need to archive any user data, contact Amazon Web Services before terminating the WorkSpace.</p> <p>You can terminate a WorkSpace that is in any state except <code>SUSPENDED</code>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely terminated.</p>",
        "operationId": "TerminateWorkspaces",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TerminateWorkspacesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TerminateWorkspacesResult"
            }
          }
        }
      }
    },
    "/#UpdateRulesOfIpGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Replaces the current rules of the specified IP access control group with the specified rules.",
        "operationId": "UpdateRulesOfIpGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRulesOfIpGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRulesOfIpGroupResult"
            }
          },
          "480": {
            "description": "InvalidParameterValuesException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValuesException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "InvalidResourceStateException",
            "schema": {
              "$ref": "#/definitions/InvalidResourceStateException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ARN": {
      "pattern": "^arn:aws:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$",
      "type": "string"
    },
    "AccessDeniedException": {
      "description": "The user is not authorized to access a resource.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "Alias": {
      "type": "string"
    },
    "AssociateIpGroupsRequest": {
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The ID of the directory."
        },
        "GroupIds": {
          "$ref": "#/definitions/IpGroupIdList",
          "description": "The IDs of one or more IP access control groups."
        }
      },
      "required": [
        "DirectoryId",
        "GroupIds"
      ],
      "type": "object"
    },
    "AssociateIpGroupsResult": {
      "properties": {},
      "type": "object"
    },
    "AuthorizeIpRulesRequest": {
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/IpGroupId",
          "description": "The ID of the group."
        },
        "UserRules": {
          "$ref": "#/definitions/IpRuleList",
          "description": "The rules to add to the group."
        }
      },
      "required": [
        "GroupId",
        "UserRules"
      ],
      "type": "object"
    },
    "AuthorizeIpRulesResult": {
      "properties": {},
      "type": "object"
    },
    "BooleanObject": {
      "type": "boolean"
    },
    "BundleId": {
      "pattern": "^wsb-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "BundleIdList": {
      "items": {
        "$ref": "#/definitions/BundleId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "BundleList": {
      "items": {
        "$ref": "#/definitions/WorkspaceBundle"
      },
      "type": "array"
    },
    "BundleOwner": {
      "type": "string"
    },
    "Compute": {
      "enum": [
        "VALUE",
        "STANDARD",
        "PERFORMANCE",
        "POWER",
        "GRAPHICS"
      ],
      "type": "string"
    },
    "ComputeType": {
      "description": "Information about the compute type.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/Compute",
          "description": "The compute type."
        }
      },
      "type": "object"
    },
    "ComputerName": {
      "type": "string"
    },
    "ConnectionState": {
      "enum": [
        "CONNECTED",
        "DISCONNECTED",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "CreateIpGroupRequest": {
      "properties": {
        "GroupDesc": {
          "$ref": "#/definitions/IpGroupDesc",
          "description": "The description of the group."
        },
        "GroupName": {
          "$ref": "#/definitions/IpGroupName",
          "description": "The name of the group."
        },
        "UserRules": {
          "$ref": "#/definitions/IpRuleList",
          "description": "The rules to add to the group."
        }
      },
      "required": [
        "GroupName"
      ],
      "type": "object"
    },
    "CreateIpGroupResult": {
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/IpGroupId",
          "description": "The ID of the group."
        }
      },
      "type": "object"
    },
    "CreateTagsRequest": {
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The ID of the WorkSpace. To find this ID, use <a>DescribeWorkspaces</a>."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags. Each WorkSpace can have a maximum of 50 tags."
        }
      },
      "required": [
        "ResourceId",
        "Tags"
      ],
      "type": "object"
    },
    "CreateTagsResult": {
      "properties": {},
      "type": "object"
    },
    "CreateWorkspacesRequest": {
      "properties": {
        "Workspaces": {
          "$ref": "#/definitions/WorkspaceRequestList",
          "description": "The WorkSpaces to create. You can specify up to 25 WorkSpaces."
        }
      },
      "required": [
        "Workspaces"
      ],
      "type": "object"
    },
    "CreateWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "$ref": "#/definitions/FailedCreateWorkspaceRequests",
          "description": "Information about the WorkSpaces that could not be created."
        },
        "PendingRequests": {
          "$ref": "#/definitions/WorkspaceList",
          "description": "<p>Information about the WorkSpaces that were created.</p> <p>Because this operation is asynchronous, the identifier returned is not immediately available for use with other operations. For example, if you call <a>DescribeWorkspaces</a> before the WorkSpace is created, the information returned can be incomplete.</p>"
        }
      },
      "type": "object"
    },
    "DefaultOu": {
      "type": "string"
    },
    "DefaultWorkspaceCreationProperties": {
      "description": "Information about defaults used to create a WorkSpace.",
      "properties": {
        "CustomSecurityGroupId": {
          "$ref": "#/definitions/SecurityGroupId",
          "description": "The identifier of any security groups to apply to WorkSpaces when they are created."
        },
        "DefaultOu": {
          "$ref": "#/definitions/DefaultOu",
          "description": "The organizational unit (OU) in the directory for the WorkSpace machine accounts."
        },
        "EnableInternetAccess": {
          "$ref": "#/definitions/BooleanObject",
          "description": "The public IP address to attach to all WorkSpaces that are created or rebuilt."
        },
        "EnableWorkDocs": {
          "$ref": "#/definitions/BooleanObject",
          "description": "Indicates whether the directory is enabled for Amazon WorkDocs."
        },
        "UserEnabledAsLocalAdministrator": {
          "$ref": "#/definitions/BooleanObject",
          "description": "Indicates whether the WorkSpace user is an administrator on the WorkSpace."
        }
      },
      "type": "object"
    },
    "DeleteIpGroupRequest": {
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/IpGroupId",
          "description": "The ID of the IP access control group."
        }
      },
      "required": [
        "GroupId"
      ],
      "type": "object"
    },
    "DeleteIpGroupResult": {
      "properties": {},
      "type": "object"
    },
    "DeleteTagsRequest": {
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The ID of the WorkSpace. To find this ID, use <a>DescribeWorkspaces</a>."
        },
        "TagKeys": {
          "$ref": "#/definitions/TagKeyList",
          "description": "The tag keys."
        }
      },
      "required": [
        "ResourceId",
        "TagKeys"
      ],
      "type": "object"
    },
    "DeleteTagsResult": {
      "properties": {},
      "type": "object"
    },
    "DescribeIpGroupsRequest": {
      "properties": {
        "GroupIds": {
          "$ref": "#/definitions/IpGroupIdList",
          "description": "The IDs of one or more IP access control groups."
        },
        "MaxResults": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of items to return."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token for the next set of results. (You received this token from a previous call.)"
        }
      },
      "type": "object"
    },
    "DescribeIpGroupsResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token to use to retrieve the next set of results, or null if there are no more results available. This token is valid for one day and must be used within that time frame."
        },
        "Result": {
          "$ref": "#/definitions/WorkspacesIpGroupsList",
          "description": "Information about the IP access control groups."
        }
      },
      "type": "object"
    },
    "DescribeTagsRequest": {
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The ID of the WorkSpace. To find this ID, use <a>DescribeWorkspaces</a>."
        }
      },
      "required": [
        "ResourceId"
      ],
      "type": "object"
    },
    "DescribeTagsResult": {
      "properties": {
        "TagList": {
          "$ref": "#/definitions/TagList",
          "description": "The tags."
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceBundlesRequest": {
      "properties": {
        "BundleIds": {
          "$ref": "#/definitions/BundleIdList",
          "description": "The IDs of the bundles. This parameter cannot be combined with any other filter."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token for the next set of results. (You received this token from a previous call.)"
        },
        "Owner": {
          "$ref": "#/definitions/BundleOwner",
          "description": "<p>The owner of the bundles. This parameter cannot be combined with any other filter.</p> <p>Specify <code>AMAZON</code> to describe the bundles provided by AWS or null to describe the bundles that belong to your account.</p>"
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceBundlesResult": {
      "properties": {
        "Bundles": {
          "$ref": "#/definitions/BundleList",
          "description": "Information about the bundles."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token to use to retrieve the next set of results, or null if there are no more results available. This token is valid for one day and must be used within that time frame."
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceDirectoriesRequest": {
      "properties": {
        "DirectoryIds": {
          "$ref": "#/definitions/DirectoryIdList",
          "description": "The identifiers of the directories. If the value is null, all directories are retrieved."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token for the next set of results. (You received this token from a previous call.)"
        }
      },
      "type": "object"
    },
    "DescribeWorkspaceDirectoriesResult": {
      "properties": {
        "Directories": {
          "$ref": "#/definitions/DirectoryList",
          "description": "Information about the directories."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token to use to retrieve the next set of results, or null if there are no more results available. This token is valid for one day and must be used within that time frame."
        }
      },
      "type": "object"
    },
    "DescribeWorkspacesConnectionStatusRequest": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token for the next set of results. (You received this token from a previous call.)"
        },
        "WorkspaceIds": {
          "$ref": "#/definitions/WorkspaceIdList",
          "description": "The identifiers of the WorkSpaces. You can specify up to 25 WorkSpaces."
        }
      },
      "type": "object"
    },
    "DescribeWorkspacesConnectionStatusResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token to use to retrieve the next set of results, or null if there are no more results available."
        },
        "WorkspacesConnectionStatus": {
          "$ref": "#/definitions/WorkspaceConnectionStatusList",
          "description": "Information about the connection status of the WorkSpace."
        }
      },
      "type": "object"
    },
    "DescribeWorkspacesRequest": {
      "properties": {
        "BundleId": {
          "$ref": "#/definitions/BundleId",
          "description": "The ID of the bundle. All WorkSpaces that are created from this bundle are retrieved. This parameter cannot be combined with any other filter."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The ID of the directory. In addition, you can optionally specify a specific directory user (see <code>UserName</code>). This parameter cannot be combined with any other filter."
        },
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of items to return."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token for the next set of results. (You received this token from a previous call.)"
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "The name of the directory user. You must specify this parameter with <code>DirectoryId</code>."
        },
        "WorkspaceIds": {
          "$ref": "#/definitions/WorkspaceIdList",
          "description": "<p>The IDs of the WorkSpaces. This parameter cannot be combined with any other filter.</p> <p>Because the <a>CreateWorkspaces</a> operation is asynchronous, the identifier it returns is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with this identifier, no information is returned.</p>"
        }
      },
      "type": "object"
    },
    "DescribeWorkspacesResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "The token to use to retrieve the next set of results, or null if there are no more results available. This token is valid for one day and must be used within that time frame."
        },
        "Workspaces": {
          "$ref": "#/definitions/WorkspaceList",
          "description": "<p>Information about the WorkSpaces.</p> <p>Because <a>CreateWorkspaces</a> is an asynchronous operation, some of the returned information could be incomplete.</p>"
        }
      },
      "type": "object"
    },
    "Description": {
      "type": "string"
    },
    "DirectoryId": {
      "pattern": "^d-[0-9a-f]{8,63}$",
      "type": "string"
    },
    "DirectoryIdList": {
      "items": {
        "$ref": "#/definitions/DirectoryId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "DirectoryList": {
      "items": {
        "$ref": "#/definitions/WorkspaceDirectory"
      },
      "type": "array"
    },
    "DirectoryName": {
      "type": "string"
    },
    "DisassociateIpGroupsRequest": {
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The ID of the directory."
        },
        "GroupIds": {
          "$ref": "#/definitions/IpGroupIdList",
          "description": "The IDs of one or more IP access control groups."
        }
      },
      "required": [
        "DirectoryId",
        "GroupIds"
      ],
      "type": "object"
    },
    "DisassociateIpGroupsResult": {
      "properties": {},
      "type": "object"
    },
    "DnsIpAddresses": {
      "items": {
        "$ref": "#/definitions/IpAddress"
      },
      "type": "array"
    },
    "ErrorType": {
      "type": "string"
    },
    "ExceptionMessage": {
      "type": "string"
    },
    "FailedCreateWorkspaceRequest": {
      "description": "Information about a WorkSpace that could not be created.",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/ErrorType",
          "description": "The error code."
        },
        "ErrorMessage": {
          "$ref": "#/definitions/Description",
          "description": "The textual error message."
        },
        "WorkspaceRequest": {
          "$ref": "#/definitions/WorkspaceRequest",
          "description": "Information about the WorkSpace."
        }
      },
      "type": "object"
    },
    "FailedCreateWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedCreateWorkspaceRequest"
      },
      "type": "array"
    },
    "FailedRebootWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedRebuildWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedStartWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedStopWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedTerminateWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/FailedWorkspaceChangeRequest"
      },
      "type": "array"
    },
    "FailedWorkspaceChangeRequest": {
      "description": "Information about a WorkSpace that could not be rebooted (<a>RebootWorkspaces</a>), rebuilt (<a>RebuildWorkspaces</a>), terminated (<a>TerminateWorkspaces</a>), started (<a>StartWorkspaces</a>), or stopped (<a>StopWorkspaces</a>).",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/ErrorType",
          "description": "The error code."
        },
        "ErrorMessage": {
          "$ref": "#/definitions/Description",
          "description": "The textual error message."
        },
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The identifier of the WorkSpace."
        }
      },
      "type": "object"
    },
    "InvalidParameterValuesException": {
      "description": "One or more parameter values are not valid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The exception error message."
        }
      },
      "type": "object"
    },
    "InvalidResourceStateException": {
      "description": "The state of the resource is not valid for this operation.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "IpAddress": {
      "type": "string"
    },
    "IpGroupDesc": {
      "type": "string"
    },
    "IpGroupId": {
      "pattern": "wsipg-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "IpGroupIdList": {
      "items": {
        "$ref": "#/definitions/IpGroupId"
      },
      "type": "array"
    },
    "IpGroupName": {
      "type": "string"
    },
    "IpRevokedRuleList": {
      "items": {
        "$ref": "#/definitions/IpRule"
      },
      "type": "array"
    },
    "IpRule": {
      "type": "string"
    },
    "IpRuleDesc": {
      "type": "string"
    },
    "IpRuleItem": {
      "description": "Information about a rule for an IP access control group.",
      "properties": {
        "ipRule": {
          "$ref": "#/definitions/IpRule",
          "description": "The IP address range, in CIDR notation."
        },
        "ruleDesc": {
          "$ref": "#/definitions/IpRuleDesc",
          "description": "The description."
        }
      },
      "type": "object"
    },
    "IpRuleList": {
      "items": {
        "$ref": "#/definitions/IpRuleItem"
      },
      "type": "array"
    },
    "Limit": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "ModificationResourceEnum": {
      "enum": [
        "ROOT_VOLUME",
        "USER_VOLUME",
        "COMPUTE_TYPE"
      ],
      "type": "string"
    },
    "ModificationState": {
      "description": "Information about a WorkSpace modification.",
      "properties": {
        "Resource": {
          "$ref": "#/definitions/ModificationResourceEnum",
          "description": "The resource."
        },
        "State": {
          "$ref": "#/definitions/ModificationStateEnum",
          "description": "The modification state."
        }
      },
      "type": "object"
    },
    "ModificationStateEnum": {
      "enum": [
        "UPDATE_INITIATED",
        "UPDATE_IN_PROGRESS"
      ],
      "type": "string"
    },
    "ModificationStateList": {
      "items": {
        "$ref": "#/definitions/ModificationState"
      },
      "type": "array"
    },
    "ModifyWorkspacePropertiesRequest": {
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        },
        "WorkspaceProperties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the WorkSpace."
        }
      },
      "required": [
        "WorkspaceId",
        "WorkspaceProperties"
      ],
      "type": "object"
    },
    "ModifyWorkspacePropertiesResult": {
      "properties": {},
      "type": "object"
    },
    "ModifyWorkspaceStateRequest": {
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        },
        "WorkspaceState": {
          "$ref": "#/definitions/TargetWorkspaceState",
          "description": "The WorkSpace state."
        }
      },
      "required": [
        "WorkspaceId",
        "WorkspaceState"
      ],
      "type": "object"
    },
    "ModifyWorkspaceStateResult": {
      "properties": {},
      "type": "object"
    },
    "NonEmptyString": {
      "minLength": 1,
      "type": "string"
    },
    "OperationInProgressException": {
      "description": "The properties of this WorkSpace are currently being modified. Try again in a moment.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "OperationNotSupportedException": {
      "description": "This operation is not supported.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "PaginationToken": {
      "maxLength": 63,
      "minLength": 1,
      "type": "string"
    },
    "RebootRequest": {
      "description": "Information used to reboot a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "type": "object"
    },
    "RebootWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/RebootRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "RebootWorkspacesRequest": {
      "properties": {
        "RebootWorkspaceRequests": {
          "$ref": "#/definitions/RebootWorkspaceRequests",
          "description": "The WorkSpaces to reboot. You can specify up to 25 WorkSpaces."
        }
      },
      "required": [
        "RebootWorkspaceRequests"
      ],
      "type": "object"
    },
    "RebootWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "$ref": "#/definitions/FailedRebootWorkspaceRequests",
          "description": "Information about the WorkSpaces that could not be rebooted."
        }
      },
      "type": "object"
    },
    "RebuildRequest": {
      "description": "Information used to rebuild a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "type": "object"
    },
    "RebuildWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/RebuildRequest"
      },
      "maxItems": 1,
      "minItems": 1,
      "type": "array"
    },
    "RebuildWorkspacesRequest": {
      "properties": {
        "RebuildWorkspaceRequests": {
          "$ref": "#/definitions/RebuildWorkspaceRequests",
          "description": "The WorkSpace to rebuild. You can specify a single WorkSpace."
        }
      },
      "required": [
        "RebuildWorkspaceRequests"
      ],
      "type": "object"
    },
    "RebuildWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "$ref": "#/definitions/FailedRebuildWorkspaceRequests",
          "description": "Information about the WorkSpace if it could not be rebuilt."
        }
      },
      "type": "object"
    },
    "RegistrationCode": {
      "maxLength": 20,
      "minLength": 1,
      "type": "string"
    },
    "ResourceAlreadyExistsException": {
      "description": "The specified resource already exists.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "ResourceAssociatedException": {
      "description": "The resource is associated with a directory.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "ResourceCreationFailedException": {
      "description": "The resource could not be created.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "ResourceLimitExceededException": {
      "description": "Your resource limits have been exceeded.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The exception error message."
        }
      },
      "type": "object"
    },
    "ResourceNotFoundException": {
      "description": "The resource could not be found.",
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The ID of the resource that could not be found."
        },
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The resource could not be found."
        }
      },
      "type": "object"
    },
    "ResourceUnavailableException": {
      "description": "The specified resource is not available.",
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The identifier of the resource that is not available."
        },
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The exception error message."
        }
      },
      "type": "object"
    },
    "RevokeIpRulesRequest": {
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/IpGroupId",
          "description": "The ID of the group."
        },
        "UserRules": {
          "$ref": "#/definitions/IpRevokedRuleList",
          "description": "The rules to remove from the group."
        }
      },
      "required": [
        "GroupId",
        "UserRules"
      ],
      "type": "object"
    },
    "RevokeIpRulesResult": {
      "properties": {},
      "type": "object"
    },
    "RootStorage": {
      "description": "Information about the root volume for a WorkSpace bundle.",
      "properties": {
        "Capacity": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The size of the root volume."
        }
      },
      "type": "object"
    },
    "RootVolumeSizeGib": {
      "type": "integer"
    },
    "RunningMode": {
      "enum": [
        "AUTO_STOP",
        "ALWAYS_ON"
      ],
      "type": "string"
    },
    "RunningModeAutoStopTimeoutInMinutes": {
      "type": "integer"
    },
    "SecurityGroupId": {
      "pattern": "^(sg-[0-9a-f]{8})$",
      "type": "string"
    },
    "StartRequest": {
      "description": "Information used to start a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        }
      },
      "type": "object"
    },
    "StartWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/StartRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "StartWorkspacesRequest": {
      "properties": {
        "StartWorkspaceRequests": {
          "$ref": "#/definitions/StartWorkspaceRequests",
          "description": "The WorkSpaces to start. You can specify up to 25 WorkSpaces."
        }
      },
      "required": [
        "StartWorkspaceRequests"
      ],
      "type": "object"
    },
    "StartWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "$ref": "#/definitions/FailedStartWorkspaceRequests",
          "description": "Information about the WorkSpaces that could not be started."
        }
      },
      "type": "object"
    },
    "StopRequest": {
      "description": "Information used to stop a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        }
      },
      "type": "object"
    },
    "StopWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/StopRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "StopWorkspacesRequest": {
      "properties": {
        "StopWorkspaceRequests": {
          "$ref": "#/definitions/StopWorkspaceRequests",
          "description": "The WorkSpaces to stop. You can specify up to 25 WorkSpaces."
        }
      },
      "required": [
        "StopWorkspaceRequests"
      ],
      "type": "object"
    },
    "StopWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "$ref": "#/definitions/FailedStopWorkspaceRequests",
          "description": "Information about the WorkSpaces that could not be stopped."
        }
      },
      "type": "object"
    },
    "SubnetId": {
      "pattern": "^(subnet-[0-9a-f]{8})$",
      "type": "string"
    },
    "SubnetIds": {
      "items": {
        "$ref": "#/definitions/SubnetId"
      },
      "type": "array"
    },
    "Tag": {
      "description": "Information about a tag.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/TagKey",
          "description": "The key of the tag."
        },
        "Value": {
          "$ref": "#/definitions/TagValue",
          "description": "The value of the tag."
        }
      },
      "required": [
        "Key"
      ],
      "type": "object"
    },
    "TagKey": {
      "maxLength": 127,
      "minLength": 1,
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagValue": {
      "maxLength": 255,
      "type": "string"
    },
    "TargetWorkspaceState": {
      "enum": [
        "AVAILABLE",
        "ADMIN_MAINTENANCE"
      ],
      "type": "string"
    },
    "TerminateRequest": {
      "description": "Information used to terminate a WorkSpace.",
      "properties": {
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        }
      },
      "required": [
        "WorkspaceId"
      ],
      "type": "object"
    },
    "TerminateWorkspaceRequests": {
      "items": {
        "$ref": "#/definitions/TerminateRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "TerminateWorkspacesRequest": {
      "properties": {
        "TerminateWorkspaceRequests": {
          "$ref": "#/definitions/TerminateWorkspaceRequests",
          "description": "The WorkSpaces to terminate. You can specify up to 25 WorkSpaces."
        }
      },
      "required": [
        "TerminateWorkspaceRequests"
      ],
      "type": "object"
    },
    "TerminateWorkspacesResult": {
      "properties": {
        "FailedRequests": {
          "$ref": "#/definitions/FailedTerminateWorkspaceRequests",
          "description": "Information about the WorkSpaces that could not be terminated."
        }
      },
      "type": "object"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "UnsupportedWorkspaceConfigurationException": {
      "description": "The configuration of this WorkSpace is not supported for this operation. For more information, see the <a href=\"http://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. ",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object"
    },
    "UpdateRulesOfIpGroupRequest": {
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/IpGroupId",
          "description": "The ID of the group."
        },
        "UserRules": {
          "$ref": "#/definitions/IpRuleList",
          "description": "One or more rules."
        }
      },
      "required": [
        "GroupId",
        "UserRules"
      ],
      "type": "object"
    },
    "UpdateRulesOfIpGroupResult": {
      "properties": {},
      "type": "object"
    },
    "UserName": {
      "maxLength": 63,
      "minLength": 1,
      "type": "string"
    },
    "UserStorage": {
      "description": "Information about the user storage for a WorkSpace bundle.",
      "properties": {
        "Capacity": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The size of the user storage."
        }
      },
      "type": "object"
    },
    "UserVolumeSizeGib": {
      "type": "integer"
    },
    "VolumeEncryptionKey": {
      "type": "string"
    },
    "Workspace": {
      "description": "Information about a WorkSpace.",
      "properties": {
        "BundleId": {
          "$ref": "#/definitions/BundleId",
          "description": "The identifier of the bundle used to create the WorkSpace."
        },
        "ComputerName": {
          "$ref": "#/definitions/ComputerName",
          "description": "The name of the WorkSpace, as seen by the operating system."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the AWS Directory Service directory for the WorkSpace."
        },
        "ErrorCode": {
          "$ref": "#/definitions/WorkspaceErrorCode",
          "description": "If the WorkSpace could not be created, contains the error code."
        },
        "ErrorMessage": {
          "$ref": "#/definitions/Description",
          "description": "If the WorkSpace could not be created, contains a textual error message that describes the failure."
        },
        "IpAddress": {
          "$ref": "#/definitions/IpAddress",
          "description": "The IP address of the WorkSpace."
        },
        "ModificationStates": {
          "$ref": "#/definitions/ModificationStateList",
          "description": "The modification states of the WorkSpace."
        },
        "RootVolumeEncryptionEnabled": {
          "$ref": "#/definitions/BooleanObject",
          "description": "Indicates whether the data stored on the root volume is encrypted."
        },
        "State": {
          "$ref": "#/definitions/WorkspaceState",
          "description": "The operational state of the WorkSpace."
        },
        "SubnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "The identifier of the subnet for the WorkSpace."
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "The user for the WorkSpace."
        },
        "UserVolumeEncryptionEnabled": {
          "$ref": "#/definitions/BooleanObject",
          "description": "Indicates whether the data stored on the user volume is encrypted."
        },
        "VolumeEncryptionKey": {
          "$ref": "#/definitions/VolumeEncryptionKey",
          "description": "The KMS key used to encrypt data stored on your WorkSpace."
        },
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The identifier of the WorkSpace."
        },
        "WorkspaceProperties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the WorkSpace."
        }
      },
      "type": "object"
    },
    "WorkspaceBundle": {
      "description": "Information about a WorkSpace bundle.",
      "properties": {
        "BundleId": {
          "$ref": "#/definitions/BundleId",
          "description": "The bundle identifier."
        },
        "ComputeType": {
          "$ref": "#/definitions/ComputeType",
          "description": "The compute type. For more information, see <a href=\"http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles\">Amazon WorkSpaces Bundles</a>."
        },
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A description."
        },
        "Name": {
          "$ref": "#/definitions/NonEmptyString",
          "description": "The name of the bundle."
        },
        "Owner": {
          "$ref": "#/definitions/BundleOwner",
          "description": "The owner of the bundle. This is the account identifier of the owner, or <code>AMAZON</code> if the bundle is provided by AWS."
        },
        "RootStorage": {
          "$ref": "#/definitions/RootStorage",
          "description": "The size of the root volume."
        },
        "UserStorage": {
          "$ref": "#/definitions/UserStorage",
          "description": "The size of the user storage."
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionStatus": {
      "description": "Describes the connection status of a WorkSpace.",
      "properties": {
        "ConnectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped."
        },
        "ConnectionStateCheckTimestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The timestamp of the connection state check."
        },
        "LastKnownUserConnectionTimestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The timestamp of the last known user connection."
        },
        "WorkspaceId": {
          "$ref": "#/definitions/WorkspaceId",
          "description": "The ID of the WorkSpace."
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionStatusList": {
      "items": {
        "$ref": "#/definitions/WorkspaceConnectionStatus"
      },
      "type": "array"
    },
    "WorkspaceDirectory": {
      "description": "Information about an AWS Directory Service directory for use with Amazon WorkSpaces.",
      "properties": {
        "Alias": {
          "$ref": "#/definitions/Alias",
          "description": "The directory alias."
        },
        "CustomerUserName": {
          "$ref": "#/definitions/UserName",
          "description": "The user name for the service account."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory identifier."
        },
        "DirectoryName": {
          "$ref": "#/definitions/DirectoryName",
          "description": "The name of the directory."
        },
        "DirectoryType": {
          "$ref": "#/definitions/WorkspaceDirectoryType",
          "description": "The directory type."
        },
        "DnsIpAddresses": {
          "$ref": "#/definitions/DnsIpAddresses",
          "description": "The IP addresses of the DNS servers for the directory."
        },
        "IamRoleId": {
          "$ref": "#/definitions/ARN",
          "description": "The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf."
        },
        "RegistrationCode": {
          "$ref": "#/definitions/RegistrationCode",
          "description": "The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory."
        },
        "State": {
          "$ref": "#/definitions/WorkspaceDirectoryState",
          "description": "The state of the directory's registration with Amazon WorkSpaces"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIds",
          "description": "The identifiers of the subnets used with the directory."
        },
        "WorkspaceCreationProperties": {
          "$ref": "#/definitions/DefaultWorkspaceCreationProperties",
          "description": "The default creation properties for all WorkSpaces in the directory."
        },
        "WorkspaceSecurityGroupId": {
          "$ref": "#/definitions/SecurityGroupId",
          "description": "The identifier of the security group that is assigned to new WorkSpaces."
        },
        "ipGroupIds": {
          "$ref": "#/definitions/IpGroupIdList",
          "description": "The identifiers of the IP access control groups associated with the directory."
        }
      },
      "type": "object"
    },
    "WorkspaceDirectoryState": {
      "enum": [
        "REGISTERING",
        "REGISTERED",
        "DEREGISTERING",
        "DEREGISTERED",
        "ERROR"
      ],
      "type": "string"
    },
    "WorkspaceDirectoryType": {
      "enum": [
        "SIMPLE_AD",
        "AD_CONNECTOR"
      ],
      "type": "string"
    },
    "WorkspaceErrorCode": {
      "type": "string"
    },
    "WorkspaceId": {
      "pattern": "^ws-[0-9a-z]{8,63}$",
      "type": "string"
    },
    "WorkspaceIdList": {
      "items": {
        "$ref": "#/definitions/WorkspaceId"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "WorkspaceList": {
      "items": {
        "$ref": "#/definitions/Workspace"
      },
      "type": "array"
    },
    "WorkspaceProperties": {
      "description": "Information about a WorkSpace.",
      "properties": {
        "ComputeTypeName": {
          "$ref": "#/definitions/Compute",
          "description": "The compute type. For more information, see <a href=\"http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles\">Amazon WorkSpaces Bundles</a>."
        },
        "RootVolumeSizeGib": {
          "$ref": "#/definitions/RootVolumeSizeGib",
          "description": "The size of the root volume."
        },
        "RunningMode": {
          "$ref": "#/definitions/RunningMode",
          "description": "The running mode. For more information, see <a href=\"http://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html\">Manage the WorkSpace Running Mode</a>."
        },
        "RunningModeAutoStopTimeoutInMinutes": {
          "$ref": "#/definitions/RunningModeAutoStopTimeoutInMinutes",
          "description": "The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60 minute intervals."
        },
        "UserVolumeSizeGib": {
          "$ref": "#/definitions/UserVolumeSizeGib",
          "description": "The size of the user storage."
        }
      },
      "type": "object"
    },
    "WorkspaceRequest": {
      "description": "Information used to create a WorkSpace.",
      "properties": {
        "BundleId": {
          "$ref": "#/definitions/BundleId",
          "description": "The identifier of the bundle for the WorkSpace. You can use <a>DescribeWorkspaceBundles</a> to list the available bundles."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the AWS Directory Service directory for the WorkSpace. You can use <a>DescribeWorkspaceDirectories</a> to list the available directories."
        },
        "RootVolumeEncryptionEnabled": {
          "$ref": "#/definitions/BooleanObject",
          "description": "Indicates whether the data stored on the root volume is encrypted."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags for the WorkSpace."
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "The username of the user for the WorkSpace. This username must exist in the AWS Directory Service directory for the WorkSpace."
        },
        "UserVolumeEncryptionEnabled": {
          "$ref": "#/definitions/BooleanObject",
          "description": "Indicates whether the data stored on the user volume is encrypted."
        },
        "VolumeEncryptionKey": {
          "$ref": "#/definitions/VolumeEncryptionKey",
          "description": "The KMS key used to encrypt data stored on your WorkSpace."
        },
        "WorkspaceProperties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The WorkSpace properties."
        }
      },
      "required": [
        "DirectoryId",
        "UserName",
        "BundleId"
      ],
      "type": "object"
    },
    "WorkspaceRequestList": {
      "items": {
        "$ref": "#/definitions/WorkspaceRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "WorkspaceState": {
      "enum": [
        "PENDING",
        "AVAILABLE",
        "IMPAIRED",
        "UNHEALTHY",
        "REBOOTING",
        "STARTING",
        "REBUILDING",
        "MAINTENANCE",
        "ADMIN_MAINTENANCE",
        "TERMINATING",
        "TERMINATED",
        "SUSPENDED",
        "UPDATING",
        "STOPPING",
        "STOPPED",
        "ERROR"
      ],
      "type": "string"
    },
    "WorkspacesIpGroup": {
      "description": "Information about an IP access control group.",
      "properties": {
        "groupDesc": {
          "$ref": "#/definitions/IpGroupDesc",
          "description": "The description of the group."
        },
        "groupId": {
          "$ref": "#/definitions/IpGroupId",
          "description": "The ID of the group."
        },
        "groupName": {
          "$ref": "#/definitions/IpGroupName",
          "description": "The name of the group."
        },
        "userRules": {
          "$ref": "#/definitions/IpRuleList",
          "description": "The rules."
        }
      },
      "type": "object"
    },
    "WorkspacesIpGroupsList": {
      "items": {
        "$ref": "#/definitions/WorkspacesIpGroup"
      },
      "type": "array"
    }
  }
}
