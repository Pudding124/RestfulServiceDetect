{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "genomics.googleapis.com",
  "basePath": "/",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Upload, process, query, and search Genomics data in the cloud.",
    "title": "Genomics",
    "version": "v2alpha1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.6.2"
        },
        "format": "google",
        "url": "https://genomics.googleapis.com/$discovery/rest?version=v2alpha1",
        "version": "v1"
      }
    ],
    "x-preferred": false,
    "x-providerName": "googleapis.com",
    "x-serviceName": "genomics"
  },
  "externalDocs": {
    "url": "https://cloud.google.com/genomics"
  },
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 authentication",
      "flow": "implicit",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/genomics": "View and manage Genomics data"
      },
      "type": "oauth2"
    }
  },
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "in": "query",
      "name": "$.xgafv",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "in": "query",
      "name": "access_token",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "in": "query",
      "name": "alt",
      "type": "string"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "in": "query",
      "name": "bearer_token",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "in": "query",
      "name": "callback",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "in": "query",
      "name": "fields",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "in": "query",
      "name": "key",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "in": "query",
      "name": "oauth_token",
      "type": "string"
    },
    "pp": {
      "default": true,
      "description": "Pretty-print response.",
      "in": "query",
      "name": "pp",
      "type": "boolean"
    },
    "prettyPrint": {
      "default": true,
      "description": "Returns response with indentations and line breaks.",
      "in": "query",
      "name": "prettyPrint",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "in": "query",
      "name": "quotaUser",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "in": "query",
      "name": "uploadType",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "in": "query",
      "name": "upload_protocol",
      "type": "string"
    }
  },
  "tags": [
    {
      "name": "pipelines"
    },
    {
      "name": "projects"
    },
    {
      "name": "workers"
    }
  ],
  "paths": {
    "/v2alpha1/pipelines:run": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Runs a pipeline.\n\n**Note:** In order to use this method, the Genomics Service Agent\nmust have access to your project.  This is done automatically when the\nGenomics API is first enabled, but if you delete this permission, or if\nyou have already enabled the Genomics API prior to the launch of the\nv2alpha1 API, you must disable and re-enable the API to grant the Genomics\nService Agent the required permissions.\n\n[1]: /genomics/gsa",
        "operationId": "genomics.pipelines.run",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RunPipelineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ],
        "tags": [
          "pipelines"
        ]
      }
    },
    "/v2alpha1/workers/{id}:checkIn": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "The worker uses this method to retrieve the assigned operation and\nprovide periodic status updates.",
        "operationId": "genomics.workers.checkIn",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CheckInRequest"
            }
          },
          {
            "description": "The worker id, assigned when it was created.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CheckInResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ],
        "tags": [
          "workers"
        ]
      }
    },
    "/v2alpha1/{name}": {
      "get": {
        "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
        "operationId": "genomics.projects.operations.get",
        "parameters": [
          {
            "description": "The name of the operation resource.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ],
        "tags": [
          "projects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ]
    },
    "/v2alpha1/{name}:cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. Clients may use Operations.GetOperation or Operations.ListOperations to check whether the cancellation succeeded or the operation completed despite cancellation.",
        "operationId": "genomics.projects.operations.cancel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelOperationRequest"
            }
          },
          {
            "description": "The name of the operation resource to be cancelled.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/genomics"
            ]
          }
        ],
        "tags": [
          "projects"
        ]
      }
    }
  },
  "definitions": {
    "Accelerator": {
      "description": "Carries information about an accelerator that can be attached to a VM.",
      "properties": {
        "count": {
          "description": "How many accelerators of this type to attach.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "description": "The accelerator type string (eg nvidia-tesla-k80).\n\nOnly NVIDIA GPU accelerators are currently supported.  If an NVIDIA GPU is\nattached, the required runtime libraries will be made available to all\ncontainers under `/usr/local/nvidia`.  The driver version to install must\nbe specified using the NVIDIA driver version parameter on the virtual\nmachine specification.  Note that attaching a GPU increases the worker VM\nstartup time by a few minutes.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Action": {
      "description": "Action specifies a single action that runs a docker container.",
      "properties": {
        "commands": {
          "description": "If specified, overrides the CMD specified in the container.  If the\ncontainer also has an ENTRYPOINT the values are used as entrypoint\narguments.  Otherwise, they are used as a command and arguments to run\ninside the container.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "credentials": {
          "$ref": "#/definitions/Secret",
          "description": "If the specified image is hosted on a private repository other than Google\nContainer Registry, the credentials required to pull the image must be\nspecified here as a encrypted secret.\n\nThe secret must decrypt to a JSON encoded dictionary containing both\n`username` and `password` keys."
        },
        "entrypoint": {
          "description": "If specified, overrides the ENTRYPOINT specified in the container.",
          "type": "string"
        },
        "environment": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The environment to pass into the container.  This environment is merged\nwith any values specified in the Pipeline message.  These values overwrite\nany in the Pipeline message.\n\nIn addition to the values passed here, a few other values are\nautomatically injected into the environment.  These cannot be hidden or\noverwritten.\n\n`GOOGLE_PIPELINE_FAILED` will be set to \"1\" if the pipeline has failed\nbecause an action has exited with a non-zero status (and did not have the\nIGNORE_EXIT_STATUS flag set).  This can be used to determine if additional\ndebug or logging actions should execute.\n\n`GOOGLE_LAST_EXIT_STATUS` will be set to the exit status of the last\nnon-background action that executed.  This can be used by workflow engine\nauthors to determine whether an individual action has succeeded or failed.",
          "type": "object"
        },
        "flags": {
          "description": "The set of flags to apply to this action.",
          "items": {
            "enum": [
              "FLAG_UNSPECIFIED",
              "IGNORE_EXIT_STATUS",
              "RUN_IN_BACKGROUND",
              "ALWAYS_RUN",
              "ENABLE_FUSE",
              "PUBLISH_EXPOSED_PORTS",
              "DISABLE_IMAGE_PREFETCH",
              "DISABLE_STANDARD_ERROR_CAPTURE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "imageUri": {
          "description": "The URI to pull the container image from.  Note that all images referenced\nby actions in the pipeline are pulled before the first action runs.  If\nmultiple actions reference the same image, it is only pulled once,\nensuring that the same image is used for all actions in a single pipeline.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to associate with the action.  This field is provided to assist\nworkflow engine authors in identifying actions (for example, to indicate\nwhat sort of action they perform: eg. localization, debugging, etc).  They\nare returned in the operation metadata but are otherwise ignored.",
          "type": "object"
        },
        "mounts": {
          "description": "A list of mounts to make available to the action.\n\nIn addition to the values specified here, every action has a special\nvirtual disk mounted under /google that contains log files and other\noperational components.\n\n<ul>\n  <li><code>/google/logs</code>: all logs written during the pipeline\n  execution are stored here.</li>\n  <li><code>/google/logs/output</code>: the combined standard output and\n  standard error of all actions run as part of the pipeline\n  execution.</li>\n  <li><code>/google/logs/action/*/stdout</code>: the complete contents of\n  each individual action's standard output</li>\n  <li><code>/google/logs/action/*/stderr</code>: the complete contents of\n  each individual action's standard error output</li>\n</ul>",
          "items": {
            "$ref": "#/definitions/Mount"
          },
          "type": "array"
        },
        "name": {
          "description": "An optional name for the container.  The container hostname will be set to\nthis name, making it useful for inter-container communication.  The name\nmust contain only upper and lowercase alphanumeric characters and hypens\nand cannot start with a hypen.",
          "type": "string"
        },
        "pidNamespace": {
          "description": "The PID namespace to run the action inside.  If unspecified, a separate\nisolated namespace is used.",
          "type": "string"
        },
        "portMappings": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "A map of container to host port mappings for this container.  Note that if\nthe container already specifies exposed ports, the PUBLISH_EXPOSED_PORTS\nflag should be used instead.\n\nThe host port number must be less than 65536.  If it is zero, an unused\nrandom port is assigned.  To determine the resulting port number, consult\nthe ContainerStartedEvent in the operation metadata.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object"
    },
    "CheckInRequest": {
      "description": "The parameters to the CheckIn method.",
      "properties": {
        "deadlineExpired": {
          "$ref": "#/definitions/Empty",
          "description": "The deadline has expired and the worker needs more time."
        },
        "event": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "A workflow specific event occurred.",
          "type": "object"
        },
        "result": {
          "$ref": "#/definitions/Status",
          "description": "The operation has finished with the given result."
        }
      },
      "type": "object"
    },
    "CheckInResponse": {
      "description": "The response to the CheckIn method.",
      "properties": {
        "deadline": {
          "description": "The deadline by which the worker must request an extension.  The backend\nwill allow for network transmission time and other delays, but the worker\nmust attempt to transmit the extension request no later than the deadline.",
          "format": "google-datetime",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The metadata that describes the operation assigned to the worker.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ComputeEngine": {
      "description": "Describes a Compute Engine resource that is being managed by a running\npipeline.",
      "properties": {
        "diskNames": {
          "description": "The names of the disks that were created for this pipeline.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instanceName": {
          "description": "The instance on which the operation is running.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type of the instance.",
          "type": "string"
        },
        "zone": {
          "description": "The availability zone in which the instance resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerStartedEvent": {
      "description": "This event is generated when a container starts.",
      "properties": {
        "actionId": {
          "description": "The numeric ID of the action that started this container.",
          "format": "int32",
          "type": "integer"
        },
        "ipAddress": {
          "description": "The public IP address that can be used to connect to the container.  This\nfield is only populated when at least one port mapping is present.  If the\ninstance was created with a private address this field will be empty even\nif port mappings exist.",
          "type": "string"
        },
        "portMappings": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "description": "The container to host port mappings installed for this container.  This\nset will contain any ports exposed using the PUBLISH_EXPOSED_PORTS flag as\nwell as any specified in the Action definition.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ContainerStoppedEvent": {
      "description": "This event is generated when a container exits.",
      "properties": {
        "actionId": {
          "description": "The numeric ID of the action that started this container.",
          "format": "int32",
          "type": "integer"
        },
        "exitStatus": {
          "description": "The exit status of the container.",
          "format": "int32",
          "type": "integer"
        },
        "stderr": {
          "description": "The tail end of any content written to standard error by the container.\nTo prevent this from being recorded if the action is known to emit\nlarge amounts of debugging noise or sensitive information, set the\nDISABLE_STANDARD_ERROR_CAPTURE flag.\n\nNote that only a small amount of the end of the stream is captured here.\nThe entire stream is stored in the /google/logs directory mounted into\neach action, and may be copied off the machine as described elsewhere.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DelayedEvent": {
      "description": "This event is generated whenever a resource limitation or transient error\ndelays execution of a pipeline that was otherwise ready to run.",
      "properties": {
        "cause": {
          "description": "A textual description of the cause of the delay.  The string may change\nwithout notice since it is often generated by another service (such as\nCompute Engine).",
          "type": "string"
        },
        "metrics": {
          "description": "If the delay was caused by a resource shortage, this field lists the\nCompute Engine metrics that are preventing this operation from running\n(for example, CPUS or INSTANCES).  If the particular metric is not known,\na single UNKNOWN metric will be present.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Disk": {
      "description": "Carries information about a disk that can be attached to a VM.",
      "properties": {
        "name": {
          "description": "A user supplied name for the disk, used when mounting it into actions.\nThe name must contain only upper and lowercase alphanumeric characters and\nhypens and cannot start with a hypen.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The size, in gigabytes, of the disk to attach.  Note that this value is\nnot configurable for some disk types such as local-ssd.  If the size is\nnot specified, a size of at least 500gb is used to ensure reasonable I/O\nperformance.",
          "format": "int32",
          "type": "integer"
        },
        "sourceImage": {
          "description": "An optional image to put on the disk before attaching it to the VM.",
          "type": "string"
        },
        "type": {
          "description": "The Compute Engine disk type.  If unspecified, 'standard-pd' is used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "Event": {
      "description": "Event carries information about events that occur during pipeline execution.",
      "properties": {
        "description": {
          "description": "A human readable description of the event.  Note that these strings may\nchange at any time without notice.  Any application logic must use the\ninformation in the details field.",
          "type": "string"
        },
        "details": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Machine readable details about the event.",
          "type": "object"
        },
        "timestamp": {
          "description": "The time that the event occurred.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FailedEvent": {
      "description": "This event is generated when the execution of a pipeline has failed.  Note\nthat other events may continue to occur after this event.",
      "properties": {
        "cause": {
          "description": "The human readable description of the cause of the failure.",
          "type": "string"
        },
        "code": {
          "description": "The Google standard error code that best describes this failure.",
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImportReadGroupSetsResponse": {
      "description": "The read group set import response.",
      "properties": {
        "readGroupSetIds": {
          "description": "IDs of the read group sets that were created.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ImportVariantsResponse": {
      "description": "The variant data import response.",
      "properties": {
        "callSetIds": {
          "description": "IDs of the call sets created during the import.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Metadata": {
      "description": "Metadata carries information about the pipeline execution that is returned\nin the long running operation's metadata field.",
      "properties": {
        "createTime": {
          "description": "The time that the operation was created by the API.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "The time at which execution was completed and resources were cleaned up.",
          "format": "google-datetime",
          "type": "string"
        },
        "events": {
          "description": "The list of events that have happened so far during the execution of this\noperation.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The user defined labels associated with this operation.",
          "type": "object"
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline",
          "description": "The pipeline this operation represents."
        },
        "startTime": {
          "description": "The first time at which resources were allocated to execute the pipeline.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Mount": {
      "description": "Mount carries information about a particular disk mount inside a container.",
      "properties": {
        "disk": {
          "description": "The name of the disk to mount, as specified in the resources section.",
          "type": "string"
        },
        "path": {
          "description": "The path to mount the disk at inside the container.",
          "type": "string"
        },
        "readOnly": {
          "description": "If true, the disk is mounted read only inside the container.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Network": {
      "description": "VM networking options.",
      "properties": {
        "name": {
          "description": "The network name to attach the VM's network interface to.  If unspecified,\nthe global default network is used.",
          "type": "string"
        },
        "usePrivateAddress": {
          "description": "If set to true, do not attach a public IP address to the VM.  Note that\nwithout an public IP address, additional configuration is required to\nallow the VM to access Google services.\n\nSee https://cloud.google.com/vpc/docs/configure-private-google-access\nfor more information.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "$ref": "#/definitions/Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "An OperationMetadata or Metadata object. This will always be returned with the Operation.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. For example&#58; `operations/CJHU7Oi_ChDrveSpBRjfuL-qzoWAgEw`",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "If importing ReadGroupSets, an ImportReadGroupSetsResponse is returned. If importing Variants, an ImportVariantsResponse is returned. For pipelines and exports, an Empty response is returned.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "OperationEvent": {
      "description": "An event that occurred during an Operation.",
      "properties": {
        "description": {
          "description": "Required description of event.",
          "type": "string"
        },
        "endTime": {
          "description": "Optional time of when event finished. An event can have a start time and no\nfinish time. If an event has a finish time, there must be a start time.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Optional time of when event started.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Metadata describing an Operation.",
      "properties": {
        "clientId": {
          "description": "This field is deprecated. Use `labels` instead. Optionally provided by the\ncaller when submitting the request that creates the operation.",
          "type": "string"
        },
        "createTime": {
          "description": "The time at which the job was submitted to the Genomics service.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "The time at which the job stopped running.",
          "format": "google-datetime",
          "type": "string"
        },
        "events": {
          "description": "Optional event messages that were generated during the job's execution.\nThis also contains any warnings that were generated during import\nor export.",
          "items": {
            "$ref": "#/definitions/OperationEvent"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optionally provided by the caller when submitting the request that creates\nthe operation.",
          "type": "object"
        },
        "projectId": {
          "description": "The Google Cloud Project in which the job is scoped.",
          "type": "string"
        },
        "request": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The original request that started the operation. Note that this will be in\ncurrent version of the API. If the operation was started with v1beta2 API\nand a GetOperation is performed on v1 API, a v1 request will be returned.",
          "type": "object"
        },
        "runtimeMetadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Runtime metadata on this Operation.",
          "type": "object"
        },
        "startTime": {
          "description": "The time at which the job began to run.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pipeline": {
      "description": "The Pipeline object describes a series of actions to execute, expressed as\ndocker containers.",
      "properties": {
        "actions": {
          "description": "The list of actions to execute, in the order they are specified.",
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        },
        "environment": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The environment to pass into every action.  Each action may also specify\nadditional environment variables but cannot delete an entry from this map\n(though they may overwrite it with a different value).",
          "type": "object"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources required for execution."
        }
      },
      "type": "object"
    },
    "PullStartedEvent": {
      "description": "This event is generated when the worker starts pulling an image.",
      "properties": {
        "imageUri": {
          "description": "The URI of the image that was pulled.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PullStoppedEvent": {
      "description": "This event is generated when the worker stops pulling an image.",
      "properties": {
        "imageUri": {
          "description": "The URI of the image that was pulled.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Resources": {
      "description": "The system resources for the pipeline run.\n\nAt least one zone or region must be specified or the pipeline run will fail.",
      "properties": {
        "projectId": {
          "description": "The customer project ID to allocate resources in.",
          "type": "string"
        },
        "regions": {
          "description": "The list of regions allowed for VM allocation.  If set, the zones field\nmust not be set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "virtualMachine": {
          "$ref": "#/definitions/VirtualMachine",
          "description": "The virtual machine specification."
        },
        "zones": {
          "description": "The list of zones allowed for VM allocation.  If set, the regions field\nmust not be set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RunPipelineRequest": {
      "description": "The arguments to the RunPipeline method.  The requesting user must have\nthe iam.serviceAccounts.actAs permission for the Google Genomics Service\nAccount or the request will fail.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User defined labels to associate with the returned operation.  These\nlabels are not propagated to any Google Cloud Platform resources used by\nthe operation, and may be modified at any time.\n\nTo associate labels with resources created while executing the operation,\nsee the appropriate resource message (i.e., VirtualMachine).",
          "type": "object"
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline",
          "description": "The description of the pipeline to run."
        }
      },
      "type": "object"
    },
    "RuntimeMetadata": {
      "description": "Runtime metadata that will be populated in the\nruntimeMetadata\nfield of the Operation associated with a RunPipeline execution.",
      "properties": {
        "computeEngine": {
          "$ref": "#/definitions/ComputeEngine",
          "description": "Execution information specific to Google Compute Engine."
        }
      },
      "type": "object"
    },
    "Secret": {
      "description": "Secret holds encrypted information that is only decrypted and stored in RAM\nby the worker VM when running the pipeline.",
      "properties": {
        "cipherText": {
          "description": "The value of the cipherText response from the `encrypt` method.",
          "type": "string"
        },
        "keyName": {
          "description": "The name of the Cloud KMS key that will be used to decrypt the secret\nvalue.  The VM service account must have the required permissions and\nauthentication scopes to invoke the `decrypt` method on the specified key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceAccount": {
      "description": "Carries information about a Google Cloud Service Account.",
      "properties": {
        "email": {
          "description": "Email address of the service account.  If not specified, the default\ncompute engine service account for the project will be used.",
          "type": "string"
        },
        "scopes": {
          "description": "List of scopes to be enabled for this service account on the VM, in\naddition to the Google Genomics API scope.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnexpectedExitStatusEvent": {
      "description": "This event is generated when the execution of a container results in a\nnon-zero exit status that was not otherwise ignored.  Execution will\ncontinue, but only actions that are flagged as ALWAYS_RUN will be executed:\nother actions will be skipped.",
      "properties": {
        "actionId": {
          "description": "The numeric ID of the action that started the container.",
          "format": "int32",
          "type": "integer"
        },
        "exitStatus": {
          "description": "The exit status of the container.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VirtualMachine": {
      "description": "Carries information about a Compute Engine VM resource.",
      "properties": {
        "accelerators": {
          "description": "The list of accelerators to attach to the VM.",
          "items": {
            "$ref": "#/definitions/Accelerator"
          },
          "type": "array"
        },
        "bootDiskSizeGb": {
          "description": "The size of the boot disk, in gigabytes. The boot disk must be large\nenough to accommodate all of the docker images from each action in the\npipeline at the same time. If not specified, a small but reasonable\ndefault value is used.",
          "format": "int32",
          "type": "integer"
        },
        "bootImage": {
          "description": "The host operating system image to use.\n\nAt present, only Container Optimized OS images may be used.\n\nThe default value is \"projects/cos-cloud/global/images/family/cos-stable\"\nwhich selects the latest stable release of Container Optimized OS.\n\nThis option is provided to allow testing against the beta release of the\noperating system to ensure that the new version does not interact\nnegatively with production pipelines.\n\nTo test a pipeline against the beta release of COS, use the value\n\"projects/cos-cloud/global/images/family/cos-beta\".",
          "type": "string"
        },
        "cpuPlatform": {
          "description": "The CPU platform to request.  An instance based on a newer platform may be\nallocated but never one with less capabilities.  The value of this\nparameter must be a valid Compute Engine CPU platform name (such as \"Intel\nSkylake\").  This parameter is only useful for carefully optimized work\nloads where the CPU platform has a significant impact.\n\nFor more information about the effect of this parameter, please visit\nhttps://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.",
          "type": "string"
        },
        "disks": {
          "description": "The list of disks to create and attach to the VM.",
          "items": {
            "$ref": "#/definitions/Disk"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional set of labels to apply to the VM and any attached disk resources.\nThese labels must adhere to the name and value restrictions on VM labels\nimposed by Compute Engine.\n\nThese labels are applied at creation time to the VM and are applied on a\nbest-effort basis to attached disk resources shortly after VM creation.",
          "type": "object"
        },
        "machineType": {
          "description": "The machine type of the virtual machine to create.  Must be the short name\nof a standard machine type (such as \"n1-standard-1\") or a custom machine\ntype (such as \"custom-1-4096\").",
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/Network",
          "description": "The VM network configuration."
        },
        "nvidiaDriverVersion": {
          "description": "The NVIDIA driver version to use when attaching an NVIDIA GPU accelerator.\nThe version specified here must be compatible with the GPU libraries\ncontained in the container being executed, and must be one of the drivers\nhosted in the 'nvidia-drivers-us-public' bucket on Google Cloud Storage.",
          "type": "string"
        },
        "preemptible": {
          "description": "If true, allocate a preemptible VM.",
          "type": "boolean"
        },
        "serviceAccount": {
          "$ref": "#/definitions/ServiceAccount",
          "description": "The service account to install on the VM.  This account does not need\nany permissions other than those required by the pipeline."
        }
      },
      "type": "object"
    },
    "WorkerAssignedEvent": {
      "description": "This event is generated once a worker VM has been assigned to run the\npipeline.",
      "properties": {
        "instance": {
          "description": "The worker's instance name.",
          "type": "string"
        },
        "zone": {
          "description": "The zone the worker is running in.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkerReleasedEvent": {
      "description": "This event is generated when the worker VM that was assigned to the pipeline\nhas been released (i.e., deleted).",
      "properties": {
        "instance": {
          "description": "The worker's instance name.",
          "type": "string"
        },
        "zone": {
          "description": "The zone the worker was running in.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}
